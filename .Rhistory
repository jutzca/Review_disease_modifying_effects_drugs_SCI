plot.title = element_text(face = "bold", size = 16, margin = margin(b = 10), hjust = 0.030),
plot.subtitle = element_text(size = 12, margin = margin(b = 20), hjust = 0.030),
plot.caption = element_text(size = 12, margin = margin(b = 10, t = 50), color = "#5D646F"),
axis.text.y = element_text(size = 12, color = "#5D646F"),
strip.text = element_text(color = "#5D646F", size = 12, face = "bold", hjust = 0.030),
plot.background = element_rect(fill = "#EFF2F4"),
plot.margin=unit(c(0.1,0.2,0.1,-.1),"cm"),
legend.margin  = unit(0.1, "lines"),
legend.text  = element_text(size = 14),
legend.text.align = 0)
#Load data
emsci.trauma.sex.va.a1<-distinct(subset(emsci.trauma.sex, ExamStage=='acute I' | ExamStage=='very acute'), Patientennummer, .keep_all = TRUE)
#Count percentage of female and male subjects by Year of Injury
sex_ratios = emsci.trauma.sex.va.a1 %>%
count(Sex, YEARDOI) %>%
group_by(YEARDOI)%>%
mutate(frequency = (n / sum(n))*100)
#Reshape data from long to wide in order to calculate ratios
sex_ratios <- dcast(sex_ratios, YEARDOI ~ Sex, value.var="n")
sex_ratios
#Calculate ratios
sex_ratios$Ratios <-
case_when(
is.na(sex_ratios$m) & is.na(sex_ratios$f) ~ 1,
is.na(sex_ratios$m) & sex_ratios$f >= 0 ~ 1,
sex_ratios$m >= 0 & is.na(sex_ratios$f) ~ 0,
TRUE ~ sex_ratios$m / sex_ratios$f
)
#Run LM to investigate if there was a change in sex ratio between 2001 and 2019
sex_ratios.lm <- lm(Ratios~YEARDOI, data=sex_ratios)
summary(sex_ratios.lm)
emsci.sex.long <- emsci.trauma.sex %>%
count(Sex, YEARDOI)%>%
group_by(YEARDOI)%>%
mutate(frequency = (n / sum(n))*100)
##Plot data for the male patients
gg.male <- ggplot(data = subset(emsci.sex.long,Sex=='m'),
mapping = aes(
x = as.factor(YEARDOI),
y = frequency,
fill = Sex,
label=paste(round(frequency, 0), "%", sep="")
)) +
geom_bar(stat = "identity") +
scale_y_continuous('Frequency [%]', limits = c(0, 100)) +
scale_fill_manual(values=as.vector("#3E606F"))+
geom_text(hjust=(1.1), size=3.5, colour="#FFFFFF") +
theme(text = element_text(color = "#3A3F4A"),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(linetype = "dotted", size = 0.3, color = "#3A3F4A"),
axis.title = element_blank(),
plot.title = element_text(face = "bold", size = 12, margin = margin(b = 10), hjust = 0.030),
plot.subtitle = element_text(size = 12, margin = margin(b = 20), hjust = 0.030),
plot.caption = element_text(size = 12, margin = margin(b = 10, t = 50), color = "#5D646F"),
axis.text.y = element_text(size = 12, color = "#5D646F"),
strip.text = element_text(color = "#5D646F", size = 12, face = "bold", hjust = 0.030),
plot.background = element_rect(fill = "#EFF2F4"),
plot.margin=unit(c(0.1,0.2,0.1,-.1),"cm"),
legend.position = "none",
legend.margin  = unit(0.1, "lines"),
legend.text  = element_text(size = 14),
legend.text.align = 0)+
ggtitle("Male") +
coord_flip()
##Plot data for the female patients
gg.female <-  ggplot(data = subset(emsci.sex.long,Sex=='f'),
mapping = aes(
x = as.factor(YEARDOI),
y = frequency,
fill = Sex,
label=paste(round(frequency, 0), "%", sep="")
)) +
geom_bar(stat = "identity") +
geom_text(hjust=(-0.1), size=3.5, colour="#FFFFFF") +
scale_y_continuous('Frequency [%]', limits = c(100, 0), trans = 'reverse') +
scale_fill_manual(values=as.vector("#8C3F4D"))+
theme(text = element_text(color = "#3A3F4A"),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(linetype = "dotted", size = 0.3, color = "#3A3F4A"),
axis.title = element_blank(),
plot.title = element_text(face = "bold", size = 12, margin = margin(b = 10), hjust = 0.9),
plot.subtitle = element_text(size = 12, margin = margin(b = 20), hjust = 0.030),
plot.caption = element_text(size = 12, margin = margin(b = 10, t = 50), color = "#5D646F"),
axis.text.y = element_blank(),
strip.text = element_text(color = "#5D646F", size = 12, face = "bold", hjust = 0.030),
plot.background = element_rect(fill = "#EFF2F4"),
plot.margin=unit(c(0.1,0.1,0.1,0.05),"cm"),
legend.position = "none",
legend.margin  = unit(0.1, "lines"),
legend.text  = element_text(size = 10),
legend.text.align = 0)+
ggtitle("Female") +
coord_flip()
## Plutting the graphs together together
grid.arrange(gg.female,
gg.male,
widths=c(0.4,0.4),
ncol=2
)
#Subset data: all patients with entry of AIS grade at stage acute I
emsci.ais <- subset(emsci.trauma.sex, AIS=="A"| AIS=="B"| AIS=="C"| AIS=="D")
#Create age groups
emsci.ais$agegr <- cut(emsci.ais$AgeAtDOI, breaks=c(0,19,29,49,69,100))
table(emsci.ais$agegr)
#Calculate ratios of AIS grades per age group per year for female subjects
ais_ratios.by.agegroup.female = subset(emsci.ais, Sex=='f') %>%
count(AIS, YEARDOI, agegr) %>%
group_by(agegr, YEARDOI)%>%
mutate(frequency = (n / sum(n))*100)
#Fit regression model with the proportion of AIS grade as the response, and time as the predictor
ais_ratios.by.agegroup.female.lm<-ais_ratios.by.agegroup.female %>%
group_by(AIS,agegr) %>%
do(tidy(lm(frequency~YEARDOI, data=.))%>%
mutate(
'CI low' = estimate - std.error,
'CI high' = estimate + std.error
)
)
ais_ratios.by.agegroup.female.lm <- ais_ratios.by.agegroup.female.lm[c(2,4,6,8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40),]
dodger = position_dodge(width = 0.3)
levels(ais_ratios.by.agegroup.female.lm$agegr) <- c("below 20 years","20-30 years", "31-50 years ", "51-69 years", "70+ years")
levels(ais_ratios.by.agegroup.female.lm$AIS) <- c("AIS-A", "AIS-B ", "AIS-C", "AIS-D", " ", "")
estimate.plot.female<- ggplot(ais_ratios.by.agegroup.female.lm, aes(y = estimate, x = AIS)) +
geom_pointrange(aes(ymin = `CI low`, ymax = `CI high`),
position = dodger,
size = 0.5) +
facet_wrap(.~ais_ratios.by.agegroup.female.lm$agegr, ncol = 1)+geom_hline(aes(yintercept=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)), color='red', linetype=2)+
scale_y_continuous( limits = c(-3, 3.5), breaks = seq(-3, 3.5, 1), expand = c(0,0))+
labs(y = "Estimates", x = "", title="Female") +
coord_flip() +
theme_economist(horizontal = FALSE)+scale_color_economist()+
theme(legend.position = "none",
plot.title = element_text(hjust=0.48, size=10),
axis.title.x = element_text(size=10, face = 'bold'),
axis.title.y = element_text(size=10, face = 'bold', hjust=0.4),
strip.text = element_text(size=10, face = 'italic'))
#####Calculate ratios of AIS grades per age group per year for male subjects
ais_ratios.by.agegroup.male= subset(emsci.ais, Sex=='m') %>%
count(AIS, YEARDOI, agegr) %>%
group_by(agegr, YEARDOI)%>%
mutate(frequency = (n / sum(n))*100)
#Fit regression model with the proportion of AIS grade as the response, and time as the predictor
ais_ratios.by.agegroup.male.lm<-ais_ratios.by.agegroup.male %>%
group_by(AIS,agegr) %>%
do(tidy(lm(frequency~YEARDOI, data=.))%>%
mutate(
'CI low' = estimate - std.error,
'CI high' = estimate + std.error
)
)
ais_ratios.by.agegroup.male.lm <- ais_ratios.by.agegroup.male.lm[c(2,4,6,8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40),]
levels(ais_ratios.by.agegroup.male.lm$agegr) <- c("below 20 years","20-30 years", "31-50 years ", "51-69 years", "70+ years")
levels(ais_ratios.by.agegroup.male.lm$AIS) <- c("AIS-A", "AIS-B ", "AIS-C", "AIS-D", " ", "")
estimate.plot.male<- ggplot(ais_ratios.by.agegroup.male.lm, aes(y = estimate, x = AIS)) +
geom_pointrange(aes(ymin = `CI low`, ymax = `CI high`),
position = dodger,
size = 0.5) +
facet_wrap(vars(ais_ratios.by.agegroup.male.lm$agegr), ncol = 1) +geom_hline(aes(yintercept=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)), color='red', linetype=2)+
scale_y_continuous( limits = c(-3, 3.5), breaks = seq(-3, 3.5, 1), expand = c(0,0))+
labs(y = "Estimates", x = " ", title="Male") +
coord_flip() +
theme_economist(horizontal = FALSE)+scale_color_economist()+
theme(legend.position = "none",
plot.title = element_text(hjust=0.48, size=10),
axis.title.x = element_text(size=10, face = 'bold'),
axis.title.y = element_blank(),
strip.text = element_text(size=10, face='italic'))
#Combine plots
grid.arrange(estimate.plot.female,
estimate.plot.male,
widths=c(0.4,0.4),
ncol=2)
#Only include subjects with information of sex and AIS grades
emsci.ais <- subset(emsci.trauma.sex, AIS=="A"| AIS=="B"| AIS=="C"| AIS=="D")
emsci.ais.long <- gather(emsci.ais, outcome, value, RUEMS:SCIM3_17, factor_key=TRUE)
emsci.ais.long
for (j in levels(emsci.ais$AIS)){
for (i in unique(emsci.ais$YEARDOI_new)){
print(paste("Year: ", i, " AIS score: ",j,sep = ""))
df1 = subset(emsci.ais, YEARDOI_new == i & AIS==j)
model<- lm(as.numeric(UEMS)~ExamStage_weeks+NLI_level+Sex, data = df1, na.action=na.exclude )
print(summary(model)$coef)
zw = as.data.frame(summary(model)$coef)
zw$YEAR=i
zw$AIS=j
if(j=="A" & i==2002){
zw1=zw
}else{
zw1=rbind(zw1,zw)
}
}
}
x <- zw1 %>% slice(grep("ExamStage_weeks", row.names(.)))
y <- zw1 %>% slice(grep("Intercept", row.names(.)))
ggplot(x, aes(YEAR, Estimate))+geom_point()+facet_wrap(~AIS, ncol=2)+theme_bw()+
scale_x_continuous(breaks = c(2002, 2004, 2006, 2008, 2010, 2012, 2014, 2016, 2018, 2020))+
ggtitle("LEMS")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank())
m1 <- lm(Estimate~YEAR*AIS, data=x)
###Upper extremity motor score
model1<- lm(as.numeric(TMS)~YEARDOI*ExamStage_weeks+NLI_level+Sex+AgeAtDOI, data=emsci.ais)
summary(m1)
library(nlme)
time.linear <- lm(as.numeric(TMS)~YEARDOI*ExamStage_weeks,
data=emsci.ais)
tms.lm<-subset(emsci.ais, YEARDOI=="2015") %>%
group_by(AIS) %>%
do(tidy(lmer(as.numeric(TMS)~ExamStage_weeks+(1|X...Patientennummer), data=.))%>%
mutate(
'CI low' = estimate - std.error,
'CI high' = estimate + std.error
)
)
summary(time.linear)
#Print table
table1::table1(~ Sex+AgeAtDOI+Cause+AIS+NLI_level, data = emsci.trauma.sex.va.a1)
names(emsci)
ais_ratios.by.country = emsci.ais %>%
count(AIS, YEARDOI, Country) %>%
group_by(agegr, YEARDOI)%>%
mutate(frequency = (n / sum(n))*100)
ais_ratios.by.country = emsci.ais %>%
count(AIS, YEARDOI, Country) %>%
group_by(Country, YEARDOI)%>%
mutate(frequency = (n / sum(n))*100)
ais_ratios.by.country
gg.country <- ggplot(data = ais_ratios.by.country,
mapping = aes(
x = as.factor(YEARDOI),
y = frequency,
label=paste(round(frequency, 0), "%", sep="")
)) +
geom_bar(stat = "identity") +facet_grid(.~ais_ratios.by.country$Country)
gg.country
gg.country <- ggplot(data = ais_ratios.by.country,
mapping = aes(
x = as.factor(YEARDOI),
y = n,
label=paste(round(frequency, 0), "%", sep="")
)) +
geom_bar(stat = "identity") +facet_grid(.~ais_ratios.by.country$Country)
gg.country
gg.country <- ggplot(data = ais_ratios.by.country,
mapping = aes(
x = as.factor(YEARDOI),
y = n,
label=paste(round(frequency, 0), "%", sep="")
)) +
geom_bar(stat = "identity") +facet_wrap(.~ais_ratios.by.country$Country)
gg.country
gg.country <- ggplot(data = ais_ratios.by.country,
mapping = aes(
x = as.factor(YEARDOI),
y = frequency,
label=paste(round(frequency, 0), "%", sep="")
)) +
geom_bar(stat = "identity") +facet_wrap(ais_ratios.by.country$AIS~ais_ratios.by.country$Country)
gg.country
gg.country <- ggplot(data = ais_ratios.by.country,
mapping = aes(
x = as.factor(YEARDOI),
y = frequency,
fill = AIS,
label=paste(round(frequency, 0), "%", sep="")
)) +
geom_bar(stat = "identity") +facet_grid(.~ais_ratios.by.country$Country)
gg.country
gg.country <- ggplot(data = ais_ratios.by.country,
mapping = aes(
x = as.factor(YEARDOI),
y = frequency,
fill = AIS,
label=paste(round(frequency, 0), "%", sep="")
)) +
geom_bar(stat = "identity") +facet_wrap(.~ais_ratios.by.country$Country)
gg.country
names(emsci)
ais_ratios.by.country = emsci.ais %>%
count(AIS, X5_year_bins, Country) %>%
group_by(Country, X5_year_bins)%>%
mutate(frequency = (n / sum(n))*100)
ggplot(ais_ratios.by.country, aes(YEARDOI, n))+geom
gg.country <- ggplot(data = ais_ratios.by.country,
mapping = aes(
x = as.factor(YEARDOI),
y = frequency,
fill = AIS,
label=paste(round(frequency, 0), "%", sep="")
)) +
geom_bar(stat = "identity") +facet_wrap(.~ais_ratios.by.country$Country)
gg.country <- ggplot(data = ais_ratios.by.country,
mapping = aes(
x = as.factor(X5_year_bins),
y = frequency,
fill = AIS,
label=paste(round(frequency, 0), "%", sep="")
)) +
geom_bar(stat = "identity") +facet_wrap(.~ais_ratios.by.country$Country)
gg.country
797--643
797-643
363-275
100/21*10
100/21*5
100/21*12
100/22*12
100/22*5
100/22*10
100/22*9
23+45
23+15
100000+100000+890000+10000+150000+10000+100000+50000
data1 <-read.csv(file.choose())
names(data1)
library(partykit)
install.packages("party")
install.packages("partykit")
library(partykit)
model1<-ctree(Anxiety_SCORE~Age+as.factor(sex)+as.factor(situation)+as.factor(Ethnicity)+as.factor(condition)+Duration_corrected+as.factor(Mobility_Aid)+PASIDP_SCORE, data=data1, na.action = na.pass)
names(data1)
model1<-ctree(Anxiety_SCORE~Age+as.factor(Sex)+as.factor(situation)+as.factor(Ethnicity)+as.factor(condition)+Duration_corrected+as.factor(Mobility_Aid)+PASIDP_SCORE, data=data1, na.action = na.pass)
model1<-ctree(Anxiety_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Ethnicity)+as.factor(condition)+Duration_corrected+as.factor(Mobility_Aid)+PASIDP_SCORE, data=data1, na.action = na.pass)
model1<-ctree(Anxiety_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Ethnicity)+as.factor(Condition)+Duration_corrected+as.factor(Mobility_Aid)+PASIDP_SCORE, data=data1, na.action = na.pass)
model1<-ctree(Anxiety_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Ethnicity)+as.factor(Condition)+Duration_Corrected+as.factor(Mobility_Aid)+PASIDP_SCORE, data=data1, na.action = na.pass)
plot(model1)
model1<-ctree(Anxiety_SCORE~Age data=data1, na.action = na.pass)
model1<-ctree(Anxiety_SCORE~Age, data=data1, na.action = na.pass)
plot(model1)
Anxiety_SCORE
data1$Anxiety_SCORE
Anxiety_score_new <-subset(data1, (!is.na(Anxiety_SCORE))
Anxiety_score_new <-subset(data1, (!is.na(Anxiety_SCORE)))
Anxiety_score_new <-subset(data1, (!is.na(Anxiety_SCORE)))
Anxiety_score_new
model1<-ctree(Anxiety_SCORE~Age, data=Anxiety_score_new, na.action = na.pass)
plot(model1)
model2<-ctree(Anxiety_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Ethnicity)+as.factor(Condition)+Duration_Corrected+as.factor(Mobility_Aid)+PASIDP_SCORE, data=Anxiety_score_without_na, na.action = na.pass)
#subset data to remove NA from the y variable
Anxiety_score_without_na <-subset(data1, (!is.na(Anxiety_SCORE)))
model1<-ctree(Anxiety_SCORE~Age, data=Anxiety_score_without_na, na.action = na.pass)
plot(model1)
model2<-ctree(Anxiety_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Ethnicity)+as.factor(Condition)+Duration_Corrected+as.factor(Mobility_Aid)+PASIDP_SCORE, data=Anxiety_score_without_na, na.action = na.pass)
plot(model2)
model1<-ctree(Anxiety_SCORE~Age+as.factor(Sex), data=Anxiety_score_without_na, na.action = na.pass)
plot(model1)
model2<-ctree(Anxiety_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Ethnicity)+as.factor(Condition)+Duration_Corrected+as.factor(Mobility_Aid)+PASIDP_SCORE, data=Anxiety_score_without_na, na.action = na.pass)
plot(model2)
library(partykit)
model1<-ctree(Anxiety_SCORE~Age+as.factor(Sex), data=Anxiety_score_without_na, na.action = na.pass)
plot(model1)
model1<-ctree(Anxiety_SCORE~Age+as.factor(Sex)+as.factor(Situation), data=Anxiety_score_without_na, na.action = na.pass)
plot(model1)
emsci<- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/9_EMSCI_epidemiological_shift/2_Data/emsci_data_2020.csv", sep = ',', header = T,  na.strings=c("","NA"))
#Only include subject with information on sex, valid age at injury, traumatic or ischemic cause of injury, and level of injury either cervical, thoracic, or lumbar
emsci.trauma.sex <- subset(emsci, (AgeAtDOI > 8) & (Sex=='f' | Sex=='m') &
(Cause=="ischemic" | Cause=="traumatic" | Cause=="haemorragic" |Cause=="disc herniation") &
(NLI_level == 'cervical' | NLI_level == 'thoracic'| NLI_level == 'lumbar') & (YEARDOI >= 2000))
emsci.ais <- subset(emsci.trauma.sex, AIS=="A"| AIS=="B"| AIS=="C"| AIS=="D")
levels(emsci.ais$AIS) <- c("AIS-A", "AIS-B ", "AIS-C", "AIS-D", " ", "")
abbrev_x <- c("", "2001/02", ""  ,"2003 "," ","2004","","2005"," ","2006"," ","2007"," ","2008"," ","2009 "," ","2010"," ","2011"," ","2012"," ","2013 "," ","2014 "," ","2015"," ","2016"," ","2017"," ","2018/19", '')
plot <-ggplot(emsci.ais,aes(x=newtimeline, y=as.numeric(SCIM2_TotalScore), group=AIS)) +
stat_summary(fun.data = "mean_cl_boot", geom="smooth", se = TRUE, color="black", size=0.5) +
facet_grid(emsci.ais$AIS~.)+theme_bw()+ ylab('Total SCIM II Score')+
scale_x_continuous( limits = c(0, 884), breaks = seq(0, 884, 26), expand = c(0,0), labels=abbrev_x, position = "top" )+
#scale_y_continuous( limits = c(0, 50), breaks = seq(0, 50, 25), expand = c(0,0))+
theme(axis.title.x = element_blank(),panel.spacing = unit(1, "lines"), axis.ticks.x = element_blank(),
axis.text.x = element_text(face='bold'))
plot
library(ggplot2)
library(grid)
plot <-ggplot(emsci.ais,aes(x=newtimeline, y=as.numeric(SCIM2_TotalScore), group=AIS)) +
stat_summary(fun.data = "mean_cl_boot", geom="smooth", se = TRUE, color="black", size=0.5) +
facet_grid(emsci.ais$AIS~.)+theme_bw()+ ylab('Total SCIM II Score')+
scale_x_continuous( limits = c(0, 884), breaks = seq(0, 884, 26), expand = c(0,0), labels=abbrev_x, position = "top" )+
#scale_y_continuous( limits = c(0, 50), breaks = seq(0, 50, 25), expand = c(0,0))+
theme(axis.title.x = element_blank(),panel.spacing = unit(1, "lines"), axis.ticks.x = element_blank(),
axis.text.x = element_text(face='bold'))
plot
# Construct a grid.layout that is the same as the ggplot layout
gt = ggplotGrob(plot)
lay = grid.layout(nrow = length(gt$heights), ncol = length(gt$widths),
widths = gt$widths, heights = gt$heights)
# Push to this viewport
pushViewport(viewport(layout = lay))
# Within the layout, push to a viewport that spans the plot panels.
pos = gt$layout[grep("panel", gt$layout$name), c("t", "l")]  # Positions of the panels
pushViewport(viewport(layout.pos.col = pos$l, layout.pos.row = min(pos$t):max(pos$t)))
x.axis.limits = summarise_layout(ggplot_build(plot))[1, c('xmin', 'xmax')]
# Set up a data viewport,
# so that the x-axis units are, in effect, "native",
# but y-axis units are, in effect, "npc".
# And push to the data viewport.
pushViewport(dataViewport(yscale = c(0, 1),
xscale = x.axis.limits))
# Draw the rectangle
grid.rect(x = 52, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 156, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 260, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 364, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 468, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 572, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 676, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 780, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
# Back to the root viewport
upViewport(0)
grid.rect(x = 780, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "blue", col = "transparent", alpha = .15))
# Back to the root viewport
upViewport(0)
library(ggplot2)
library(grid)
emsci<- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/9_EMSCI_epidemiological_shift/2_Data/emsci_data_2020.csv", sep = ',', header = T,  na.strings=c("","NA"))
#Only include subject with information on sex, valid age at injury, traumatic or ischemic cause of injury, and level of injury either cervical, thoracic, or lumbar
emsci.trauma.sex <- subset(emsci, (AgeAtDOI > 8) & (Sex=='f' | Sex=='m') &
(Cause=="ischemic" | Cause=="traumatic" | Cause=="haemorragic" |Cause=="disc herniation") &
(NLI_level == 'cervical' | NLI_level == 'thoracic'| NLI_level == 'lumbar') & (YEARDOI >= 2000))
emsci.ais <- subset(emsci.trauma.sex, AIS=="A"| AIS=="B"| AIS=="C"| AIS=="D")
#emsci.ais <- subset(emsci.trauma.sex,NLI_level=='thoracic'|NLI_level=='lumbar')
levels(emsci.ais$AIS) <- c("AIS-A", "AIS-B ", "AIS-C", "AIS-D", " ", "")
abbrev_x <- c("", "2001/02", ""  ,"2003 "," ","2004","","2005"," ","2006"," ","2007"," ","2008"," ","2009 "," ","2010"," ","2011"," ","2012"," ","2013 "," ","2014 "," ","2015"," ","2016"," ","2017"," ","2018/19", '')
plot <-ggplot(emsci.ais,aes(x=newtimeline, y=as.numeric(SCIM2_TotalScore), group=AIS)) +
stat_summary(fun.data = "mean_cl_boot", geom="smooth", se = TRUE, color="black", size=0.5) +
facet_grid(emsci.ais$AIS~.)+theme_bw()+ ylab('Total SCIM II Score')+
scale_x_continuous( limits = c(0, 884), breaks = seq(0, 884, 26), expand = c(0,0), labels=abbrev_x, position = "top" )+
#scale_y_continuous( limits = c(0, 50), breaks = seq(0, 50, 25), expand = c(0,0))+
theme(axis.title.x = element_blank(),panel.spacing = unit(1, "lines"), axis.ticks.x = element_blank(),
axis.text.x = element_text(face='bold'))
plot
# Construct a grid.layout that is the same as the ggplot layout
gt = ggplotGrob(plot)
lay = grid.layout(nrow = length(gt$heights), ncol = length(gt$widths),
widths = gt$widths, heights = gt$heights)
# Push to this viewport
pushViewport(viewport(layout = lay))
# Within the layout, push to a viewport that spans the plot panels.
pos = gt$layout[grep("panel", gt$layout$name), c("t", "l")]  # Positions of the panels
pushViewport(viewport(layout.pos.col = pos$l, layout.pos.row = min(pos$t):max(pos$t)))
x.axis.limits = summarise_layout(ggplot_build(plot))[1, c('xmin', 'xmax')]
# Set up a data viewport,
# so that the x-axis units are, in effect, "native",
# but y-axis units are, in effect, "npc".
# And push to the data viewport.
pushViewport(dataViewport(yscale = c(0, 1),
xscale = x.axis.limits))
# Draw the rectangle
grid.rect(x = 52, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 156, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 260, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 364, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 468, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 572, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 676, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "red", col = "transparent", alpha = .15))
grid.rect(x = 780, y = 0,
width = 52, height = 1,
just = c("left", "bottom"), default.units = "native",
gp = gpar(fill = "blue", col = "transparent", alpha = .15))
27+16
271-227
270-227
header()
setwd("/Users/jutzelec/Documents/GitHub/Review_disease_modifying_effects_drugs_SCI/")  #replace with your working directory
sessionInfo()
